{
  // Python Language Server - Use Pylance (powered by Pyright) for type checking
  "python.languageServer": "None",
  "python.analysis.typeCheckingMode": "standard",

  // Disable ALL legacy Python linting (Ruff extension handles this now)
  "python.linting.enabled": false,
  "python.linting.flake8Enabled": false,
  "python.linting.pylintEnabled": false,
  "python.linting.mypyEnabled": false,
  "python.linting.pycodestyleEnabled": false,
  "python.linting.prospectorEnabled": false,
  "python.linting.pydocstyleEnabled": false,
  "python.linting.pylintUseMinimalCheckers": false,

  // Explicitly disable Pylint in case it's enabled elsewhere
  "pylint.enabled": false,

  // Formatting - Use Black
  "python.formatting.provider": "black",
  "[python]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit",
      "source.fixAll": "explicit"
    },
    "editor.defaultFormatter": "ms-python.black-formatter"
  },

  // Ruff extension settings (modern native extension)
  "ruff.enable": true,
  "ruff.organizeImports": true,
  "ruff.showNotifications": "onWarning",
  "ruff.importStrategy": "fromEnvironment",

  // Testing
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.pytestArgs": [
    "lessons"
  ],

  // Editor settings
  "editor.rulers": [79],
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,

  // Python interpreter
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",

  // Markdown linting
  "markdownlint.config": {
    "default": true,
    "MD013": false,  // Line length - disable for flexibility
    "MD033": false,  // Allow inline HTML (useful for README badges, etc.)
    "MD041": false   // First line doesn't have to be top-level heading
  },
  "[markdown]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "files.trimTrailingWhitespace": true
  }
}

